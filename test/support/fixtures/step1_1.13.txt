%CleanMixer.ArchMap{
  components: [
    %CleanMixer.ArchMap.Component{
      file_dependencies: [
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime, :export],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.ArchMap, Inspect.CleanMixer.ArchMap],
            path: "lib/clean_mixer/arch_map.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.LexicalTracker,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Any, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Dependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :export},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :export}
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.ArchMap.Component],
            path: "lib/clean_mixer/arch_map/component.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.ArchMap, Inspect.CleanMixer.ArchMap],
            path: "lib/clean_mixer/arch_map.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.LexicalTracker,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Any, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Dependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :export},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :export}
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.ArchMap.Dependency],
            path: "lib/clean_mixer/arch_map/dependency.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.ArchMap.Filter],
            path: "lib/clean_mixer/arch_map/filter.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Filter.Pattern,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Dependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Dependency,
                ref_type: :export
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.ArchMap, Inspect.CleanMixer.ArchMap],
            path: "lib/clean_mixer/arch_map.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.LexicalTracker,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Any, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Dependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :export},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :export}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime, :export],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.ArchMap.Filter],
            path: "lib/clean_mixer/arch_map/filter.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Filter.Pattern,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Dependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Dependency,
                ref_type: :export
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.ArchMap.Component],
            path: "lib/clean_mixer/arch_map/component.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime, :export],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.ArchMap.Filter],
            path: "lib/clean_mixer/arch_map/filter.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Filter.Pattern,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Dependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Dependency,
                ref_type: :export
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.ArchMap.Dependency],
            path: "lib/clean_mixer/arch_map/dependency.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.ArchMap.Filter],
            path: "lib/clean_mixer/arch_map/filter.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Filter.Pattern,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Dependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Dependency,
                ref_type: :export
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.ArchMap.Filter.Pattern],
            path: "lib/clean_mixer/arch_map/filter/pattern.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Regex, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
            ]
          }
        }
      ],
      files: [
        %CleanMixer.CodeMap.SourceFile{
          modules: [CleanMixer.ArchMap.Filter.Pattern],
          path: "lib/clean_mixer/arch_map/filter/pattern.ex",
          references: [
            %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Typespec, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Regex, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
          ]
        },
        %CleanMixer.CodeMap.SourceFile{
          modules: [CleanMixer.ArchMap, Inspect.CleanMixer.ArchMap],
          path: "lib/clean_mixer/arch_map.ex",
          references: [
            %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Typespec, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{
              module_name: Kernel.LexicalTracker,
              ref_type: :compile
            },
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Any, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.ArchMap.Dependency,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.ArchMap.Component,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.ArchMap.Component,
              ref_type: :export
            },
            %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :export},
            %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :export}
          ]
        },
        %CleanMixer.CodeMap.SourceFile{
          modules: [CleanMixer.ArchMap.Component],
          path: "lib/clean_mixer/arch_map/component.ex",
          references: [
            %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Typespec, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
          ]
        },
        %CleanMixer.CodeMap.SourceFile{
          modules: [CleanMixer.ArchMap.Dependency],
          path: "lib/clean_mixer/arch_map/dependency.ex",
          references: [
            %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Typespec, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
          ]
        },
        %CleanMixer.CodeMap.SourceFile{
          modules: [CleanMixer.ArchMap.Filter],
          path: "lib/clean_mixer/arch_map/filter.ex",
          references: [
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Typespec, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.ArchMap.Filter.Pattern,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.ArchMap.Dependency,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.ArchMap.Component,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.ArchMap,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.ArchMap.Component,
              ref_type: :export
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.ArchMap.Dependency,
              ref_type: :export
            }
          ]
        }
      ],
      meta: %{config_path: "lib/clean_mixer/arch_map", tags: [group: "core_domain"]},
      name: "arch_map"
    },
    %CleanMixer.ArchMap.Component{
      file_dependencies: [
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap],
            path: "lib/clean_mixer/code_map.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.FileDependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :export
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.FileDependency],
            path: "lib/clean_mixer/code_map/file_dependency.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: MapSet, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.CodeModule,
                ref_type: :runtime
              }
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime, :export],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap],
            path: "lib/clean_mixer/code_map.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.FileDependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :export
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.SourceFile],
            path: "lib/clean_mixer/code_map/source_file.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Path, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.FileDependency],
            path: "lib/clean_mixer/code_map/file_dependency.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: MapSet, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.CodeModule,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.CodeModule],
            path: "lib/clean_mixer/code_map/code_module.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Code, ref_type: :runtime}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.Behaviour],
            path: "lib/clean_mixer/code_map/behaviour.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.CodeModule,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.CodeModule],
            path: "lib/clean_mixer/code_map/code_module.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Code, ref_type: :runtime}
            ]
          }
        }
      ],
      files: [
        %CleanMixer.CodeMap.SourceFile{
          modules: [CleanMixer.CodeMap],
          path: "lib/clean_mixer/code_map.ex",
          references: [
            %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Typespec, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.CodeMap.SourceFile,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.CodeMap.FileDependency,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.CodeMap.SourceFile,
              ref_type: :export
            }
          ]
        },
        %CleanMixer.CodeMap.SourceFile{
          modules: [CleanMixer.CodeMap.CodeModule],
          path: "lib/clean_mixer/code_map/code_module.ex",
          references: [
            %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Typespec, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Code, ref_type: :runtime}
          ]
        },
        %CleanMixer.CodeMap.SourceFile{
          modules: [CleanMixer.CodeMap.ModuleReference],
          path: "lib/clean_mixer/code_map/module_reference.ex",
          references: [
            %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Typespec, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
          ]
        },
        %CleanMixer.CodeMap.SourceFile{
          modules: [CleanMixer.CodeMap.FileDependency],
          path: "lib/clean_mixer/code_map/file_dependency.ex",
          references: [
            %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Typespec, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: MapSet, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.CodeMap.CodeModule,
              ref_type: :runtime
            }
          ]
        },
        %CleanMixer.CodeMap.SourceFile{
          modules: [CleanMixer.CodeMap.Behaviour],
          path: "lib/clean_mixer/code_map/behaviour.ex",
          references: [
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Typespec, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.CodeMap.CodeModule,
              ref_type: :runtime
            }
          ]
        },
        %CleanMixer.CodeMap.SourceFile{
          modules: [CleanMixer.CodeMap.SourceFile],
          path: "lib/clean_mixer/code_map/source_file.ex",
          references: [
            %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Typespec, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Path, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
          ]
        }
      ],
      meta: %{config_path: "lib/clean_mixer/code_map", tags: [group: "core_domain"]},
      name: "code_map"
    },
    %CleanMixer.ArchMap.Component{
      file_dependencies: [
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.XrefSource],
            path: "lib/clean_mixer/compiler_manifests/xref_source.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :xref, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: List.Chars, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: File, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Code, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.ModuleReference,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.ModuleReference],
            path: "lib/clean_mixer/code_map/module_reference.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.XrefSource],
            path: "lib/clean_mixer/compiler_manifests/xref_source.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :xref, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: List.Chars, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: File, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Code, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.ModuleReference,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.SourceFile],
            path: "lib/clean_mixer/code_map/source_file.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Path, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.MixProject],
            path: "lib/clean_mixer/compiler_manifests/mix_project.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Mix.Project, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Mix.Dep, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.App,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.App],
            path: "lib/clean_mixer/compiler_manifests/app.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Path, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Mix.SCM.Path, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Mix.Project, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Mix.Dep, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Mix, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: File, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: :lists, ref_type: :unknown}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:compile, :export],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.ManifestCartographer],
            path: "lib/clean_mixer/compiler_manifests/manifest_cartographer.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeCartographer,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Mix.Compilers.Elixir,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.XrefSource,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.MixProject,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.Manifest,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.App,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeCartographer,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.App,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Logger, ref_type: :export}
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeCartographer],
            path: "lib/clean_mixer/code_cartographer.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.ManifestCartographer],
            path: "lib/clean_mixer/compiler_manifests/manifest_cartographer.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeCartographer,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Mix.Compilers.Elixir,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.XrefSource,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.MixProject,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.Manifest,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.App,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeCartographer,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.App,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Logger, ref_type: :export}
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap],
            path: "lib/clean_mixer/code_map.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.FileDependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :export
              }
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.ManifestCartographer],
            path: "lib/clean_mixer/compiler_manifests/manifest_cartographer.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeCartographer,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Mix.Compilers.Elixir,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.XrefSource,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.MixProject,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.Manifest,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.App,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeCartographer,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.App,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Logger, ref_type: :export}
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.SourceFile],
            path: "lib/clean_mixer/code_map/source_file.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Path, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime, :export],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.ManifestCartographer],
            path: "lib/clean_mixer/compiler_manifests/manifest_cartographer.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeCartographer,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Mix.Compilers.Elixir,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.XrefSource,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.MixProject,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.Manifest,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.App,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeCartographer,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.App,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Logger, ref_type: :export}
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.App],
            path: "lib/clean_mixer/compiler_manifests/app.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Path, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Mix.SCM.Path, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Mix.Project, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Mix.Dep, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Mix, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: File, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: :lists, ref_type: :unknown}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.ManifestCartographer],
            path: "lib/clean_mixer/compiler_manifests/manifest_cartographer.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeCartographer,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Mix.Compilers.Elixir,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.XrefSource,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.MixProject,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.Manifest,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.App,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeCartographer,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.App,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Logger, ref_type: :export}
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.Manifest],
            path: "lib/clean_mixer/compiler_manifests/manifest.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Mix.Compilers.Elixir,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Record, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.ModuleReference,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.CodeModule,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.ModuleReference,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Mix.Compilers.Elixir,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: :lists, ref_type: :unknown}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.ManifestCartographer],
            path: "lib/clean_mixer/compiler_manifests/manifest_cartographer.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeCartographer,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Mix.Compilers.Elixir,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.XrefSource,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.MixProject,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.Manifest,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.App,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeCartographer,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.App,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Logger, ref_type: :export}
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.MixProject],
            path: "lib/clean_mixer/compiler_manifests/mix_project.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Mix.Project, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Mix.Dep, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.App,
                ref_type: :runtime
              }
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.ManifestCartographer],
            path: "lib/clean_mixer/compiler_manifests/manifest_cartographer.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeCartographer,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Mix.Compilers.Elixir,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.XrefSource,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.MixProject,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.Manifest,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.App,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeCartographer,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.App,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Logger, ref_type: :export}
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.XrefSource],
            path: "lib/clean_mixer/compiler_manifests/xref_source.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :xref, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: List.Chars, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: File, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Code, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.ModuleReference,
                ref_type: :runtime
              }
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.Manifest],
            path: "lib/clean_mixer/compiler_manifests/manifest.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Mix.Compilers.Elixir,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Record, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.ModuleReference,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.CodeModule,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.ModuleReference,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Mix.Compilers.Elixir,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: :lists, ref_type: :unknown}
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.CodeModule],
            path: "lib/clean_mixer/code_map/code_module.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Code, ref_type: :runtime}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime, :export],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.Manifest],
            path: "lib/clean_mixer/compiler_manifests/manifest.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Mix.Compilers.Elixir,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Record, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.ModuleReference,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.CodeModule,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.ModuleReference,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Mix.Compilers.Elixir,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: :lists, ref_type: :unknown}
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.ModuleReference],
            path: "lib/clean_mixer/code_map/module_reference.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime, :export],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.Manifest],
            path: "lib/clean_mixer/compiler_manifests/manifest.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Mix.Compilers.Elixir,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Record, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.ModuleReference,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.CodeModule,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.ModuleReference,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Mix.Compilers.Elixir,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: :lists, ref_type: :unknown}
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.SourceFile],
            path: "lib/clean_mixer/code_map/source_file.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Path, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
            ]
          }
        }
      ],
      files: [
        %CleanMixer.CodeMap.SourceFile{
          modules: [CleanMixer.CompilerManifests.XrefSource],
          path: "lib/clean_mixer/compiler_manifests/xref_source.ex",
          references: [
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Typespec, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: :xref, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: List.Chars, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: File, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Code, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.CodeMap.SourceFile,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.CodeMap.ModuleReference,
              ref_type: :runtime
            }
          ]
        },
        %CleanMixer.CodeMap.SourceFile{
          modules: [CleanMixer.CompilerManifests.MixProject],
          path: "lib/clean_mixer/compiler_manifests/mix_project.ex",
          references: [
            %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Typespec, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Mix.Project, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Mix.Dep, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.CompilerManifests.App,
              ref_type: :runtime
            }
          ]
        },
        %CleanMixer.CodeMap.SourceFile{
          modules: [CleanMixer.CompilerManifests.ManifestCartographer],
          path: "lib/clean_mixer/compiler_manifests/manifest_cartographer.ex",
          references: [
            %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.CodeCartographer,
              ref_type: :compile
            },
            %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{
              module_name: Mix.Compilers.Elixir,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.CompilerManifests.XrefSource,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.CompilerManifests.MixProject,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.CompilerManifests.Manifest,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.CompilerManifests.App,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.CodeMap.SourceFile,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.CodeMap,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.CodeCartographer,
              ref_type: :export
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.CompilerManifests.App,
              ref_type: :export
            },
            %CleanMixer.CodeMap.ModuleReference{module_name: Logger, ref_type: :export}
          ]
        },
        %CleanMixer.CodeMap.SourceFile{
          modules: [CleanMixer.CompilerManifests.Manifest],
          path: "lib/clean_mixer/compiler_manifests/manifest.ex",
          references: [
            %CleanMixer.CodeMap.ModuleReference{
              module_name: Mix.Compilers.Elixir,
              ref_type: :compile
            },
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Typespec, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Record, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.CodeMap.SourceFile,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.CodeMap.ModuleReference,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.CodeMap.CodeModule,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.CodeMap.ModuleReference,
              ref_type: :export
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.CodeMap.SourceFile,
              ref_type: :export
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: Mix.Compilers.Elixir,
              ref_type: :export
            },
            %CleanMixer.CodeMap.ModuleReference{module_name: :lists, ref_type: :unknown}
          ]
        },
        %CleanMixer.CodeMap.SourceFile{
          modules: [CleanMixer.CompilerManifests.App],
          path: "lib/clean_mixer/compiler_manifests/app.ex",
          references: [
            %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Typespec, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Path, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Mix.SCM.Path, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Mix.Project, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Mix.Dep, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Mix, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: File, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: :lists, ref_type: :unknown}
          ]
        }
      ],
      meta: %{config_path: "lib/clean_mixer/compiler_manifests", tags: []},
      name: "compiler_manifests"
    },
    %CleanMixer.ArchMap.Component{
      file_dependencies: [
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.MetricsMap],
            path: "lib/clean_mixer/metrics/metrics_map.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :math, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.DependencyMetrics,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics],
            path: "lib/clean_mixer/metrics/component_metrics.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                ref_type: :runtime
              }
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.MetricsMap],
            path: "lib/clean_mixer/metrics/metrics_map.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :math, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.DependencyMetrics,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.DependencyMetrics],
            path: "lib/clean_mixer/metrics/dependency_metrics.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.DependencyMetrics.Usage,
                ref_type: :runtime
              }
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.FanIn],
            path: "lib/clean_mixer/metrics/component_metrics/fan_in.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.ArchMap, Inspect.CleanMixer.ArchMap],
            path: "lib/clean_mixer/arch_map.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.LexicalTracker,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Any, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Dependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :export},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :export}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.DependencyMetrics],
            path: "lib/clean_mixer/metrics/dependency_metrics.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.DependencyMetrics.Usage,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.DependencyMetrics.Usage],
            path: "lib/clean_mixer/metrics/dependency_metrics/usage.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.MetricsMap,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                ref_type: :runtime
              }
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.FanOut],
            path: "lib/clean_mixer/metrics/component_metrics/fan_out.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.ArchMap, Inspect.CleanMixer.ArchMap],
            path: "lib/clean_mixer/arch_map.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.LexicalTracker,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Any, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Dependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :export},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :export}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.Abstractness],
            path: "lib/clean_mixer/metrics/component_metrics/abstractness.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.CodeModule,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.ArchMap.Component],
            path: "lib/clean_mixer/arch_map/component.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.Abstractness],
            path: "lib/clean_mixer/metrics/component_metrics/abstractness.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.CodeModule,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.CodeModule],
            path: "lib/clean_mixer/code_map/code_module.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Code, ref_type: :runtime}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.PublicFiles],
            path: "lib/clean_mixer/metrics/component_metrics/public_files.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.ArchMap, Inspect.CleanMixer.ArchMap],
            path: "lib/clean_mixer/arch_map.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.LexicalTracker,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Any, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Dependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :export},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :export}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.AbstractIn],
            path: "lib/clean_mixer/metrics/component_metrics/abstract_in.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.FileDependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.ArchMap, Inspect.CleanMixer.ArchMap],
            path: "lib/clean_mixer/arch_map.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.LexicalTracker,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Any, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Dependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :export},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :export}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.AbstractIn],
            path: "lib/clean_mixer/metrics/component_metrics/abstract_in.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.FileDependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.FileDependency],
            path: "lib/clean_mixer/code_map/file_dependency.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: MapSet, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.CodeModule,
                ref_type: :runtime
              }
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics],
            path: "lib/clean_mixer/metrics/component_metrics.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.AbstractIn],
            path: "lib/clean_mixer/metrics/component_metrics/abstract_in.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.FileDependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics],
            path: "lib/clean_mixer/metrics/component_metrics.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.AbstractOut],
            path: "lib/clean_mixer/metrics/component_metrics/abstract_out.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.FileDependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics],
            path: "lib/clean_mixer/metrics/component_metrics.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.Abstractness],
            path: "lib/clean_mixer/metrics/component_metrics/abstractness.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.CodeModule,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :runtime
              }
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics],
            path: "lib/clean_mixer/metrics/component_metrics.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.Distance],
            path: "lib/clean_mixer/metrics/component_metrics/distance.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics],
            path: "lib/clean_mixer/metrics/component_metrics.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.FanIn],
            path: "lib/clean_mixer/metrics/component_metrics/fan_in.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics],
            path: "lib/clean_mixer/metrics/component_metrics.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.FanOut],
            path: "lib/clean_mixer/metrics/component_metrics/fan_out.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics],
            path: "lib/clean_mixer/metrics/component_metrics.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.Instability],
            path: "lib/clean_mixer/metrics/component_metrics/instability.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics],
            path: "lib/clean_mixer/metrics/component_metrics.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.PublicFiles],
            path: "lib/clean_mixer/metrics/component_metrics/public_files.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics],
            path: "lib/clean_mixer/metrics/component_metrics.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.Stability],
            path: "lib/clean_mixer/metrics/component_metrics/stability.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.AbstractOut],
            path: "lib/clean_mixer/metrics/component_metrics/abstract_out.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.FileDependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.ArchMap, Inspect.CleanMixer.ArchMap],
            path: "lib/clean_mixer/arch_map.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.LexicalTracker,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Any, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Dependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :export},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :export}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.AbstractOut],
            path: "lib/clean_mixer/metrics/component_metrics/abstract_out.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.FileDependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.FileDependency],
            path: "lib/clean_mixer/code_map/file_dependency.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: MapSet, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.CodeModule,
                ref_type: :runtime
              }
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.DependencyMetrics.Usage],
            path: "lib/clean_mixer/metrics/dependency_metrics/usage.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.MetricsMap,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.PublicFiles],
            path: "lib/clean_mixer/metrics/component_metrics/public_files.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.DependencyMetrics.Usage],
            path: "lib/clean_mixer/metrics/dependency_metrics/usage.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.MetricsMap,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.MetricsMap],
            path: "lib/clean_mixer/metrics/metrics_map.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :math, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.DependencyMetrics,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics,
                ref_type: :runtime
              }
            ]
          }
        }
      ],
      files: [
        %CleanMixer.CodeMap.SourceFile{
          modules: [CleanMixer.Metrics.MetricsMap],
          path: "lib/clean_mixer/metrics/metrics_map.ex",
          references: [
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Typespec, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: :math, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.Metrics.DependencyMetrics,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.Metrics.ComponentMetrics,
              ref_type: :runtime
            }
          ]
        },
        %CleanMixer.CodeMap.SourceFile{
          modules: [CleanMixer.Metrics.ComponentMetrics.FanIn],
          path: "lib/clean_mixer/metrics/component_metrics/fan_in.ex",
          references: [
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Typespec, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.ArchMap,
              ref_type: :runtime
            }
          ]
        },
        %CleanMixer.CodeMap.SourceFile{
          modules: [CleanMixer.Metrics.DependencyMetrics],
          path: "lib/clean_mixer/metrics/dependency_metrics.ex",
          references: [
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Typespec, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.Metrics.DependencyMetrics.Usage,
              ref_type: :runtime
            }
          ]
        },
        %CleanMixer.CodeMap.SourceFile{
          modules: [CleanMixer.Metrics.ComponentMetrics.Stability],
          path: "lib/clean_mixer/metrics/component_metrics/stability.ex",
          references: [
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Typespec, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime}
          ]
        },
        %CleanMixer.CodeMap.SourceFile{
          modules: [CleanMixer.Metrics.ComponentMetrics.FanOut],
          path: "lib/clean_mixer/metrics/component_metrics/fan_out.ex",
          references: [
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Typespec, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.ArchMap,
              ref_type: :runtime
            }
          ]
        },
        %CleanMixer.CodeMap.SourceFile{
          modules: [CleanMixer.Metrics.ComponentMetrics.Abstractness],
          path: "lib/clean_mixer/metrics/component_metrics/abstractness.ex",
          references: [
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Typespec, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.CodeMap.CodeModule,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.ArchMap.Component,
              ref_type: :runtime
            }
          ]
        },
        %CleanMixer.CodeMap.SourceFile{
          modules: [CleanMixer.Metrics.ComponentMetrics.PublicFiles],
          path: "lib/clean_mixer/metrics/component_metrics/public_files.ex",
          references: [
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Typespec, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.ArchMap,
              ref_type: :runtime
            }
          ]
        },
        %CleanMixer.CodeMap.SourceFile{
          modules: [CleanMixer.Metrics.ComponentMetrics.Instability],
          path: "lib/clean_mixer/metrics/component_metrics/instability.ex",
          references: [
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Typespec, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime}
          ]
        },
        %CleanMixer.CodeMap.SourceFile{
          modules: [CleanMixer.Metrics.ComponentMetrics.Distance],
          path: "lib/clean_mixer/metrics/component_metrics/distance.ex",
          references: [
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Typespec, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime}
          ]
        },
        %CleanMixer.CodeMap.SourceFile{
          modules: [CleanMixer.Metrics.ComponentMetrics.AbstractIn],
          path: "lib/clean_mixer/metrics/component_metrics/abstract_in.ex",
          references: [
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Typespec, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.CodeMap.FileDependency,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.ArchMap,
              ref_type: :runtime
            }
          ]
        },
        %CleanMixer.CodeMap.SourceFile{
          modules: [CleanMixer.Metrics.ComponentMetrics],
          path: "lib/clean_mixer/metrics/component_metrics.ex",
          references: [
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Typespec, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
              ref_type: :runtime
            }
          ]
        },
        %CleanMixer.CodeMap.SourceFile{
          modules: [CleanMixer.Metrics.ComponentMetrics.AbstractOut],
          path: "lib/clean_mixer/metrics/component_metrics/abstract_out.ex",
          references: [
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Typespec, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.CodeMap.FileDependency,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.ArchMap,
              ref_type: :runtime
            }
          ]
        },
        %CleanMixer.CodeMap.SourceFile{
          modules: [CleanMixer.Metrics.DependencyMetrics.Usage],
          path: "lib/clean_mixer/metrics/dependency_metrics/usage.ex",
          references: [
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Typespec, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
            %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.Metrics.MetricsMap,
              ref_type: :runtime
            },
            %CleanMixer.CodeMap.ModuleReference{
              module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
              ref_type: :runtime
            }
          ]
        }
      ],
      meta: %{config_path: "lib/clean_mixer/metrics", tags: []},
      name: "metrics"
    }
  ],
  dependencies: [
    %CleanMixer.ArchMap.Dependency{
      files: [
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.XrefSource],
            path: "lib/clean_mixer/compiler_manifests/xref_source.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :xref, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: List.Chars, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: File, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Code, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.ModuleReference,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.ModuleReference],
            path: "lib/clean_mixer/code_map/module_reference.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.XrefSource],
            path: "lib/clean_mixer/compiler_manifests/xref_source.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :xref, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: List.Chars, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: File, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Code, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.ModuleReference,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.SourceFile],
            path: "lib/clean_mixer/code_map/source_file.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Path, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.ManifestCartographer],
            path: "lib/clean_mixer/compiler_manifests/manifest_cartographer.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeCartographer,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Mix.Compilers.Elixir,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.XrefSource,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.MixProject,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.Manifest,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.App,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeCartographer,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.App,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Logger, ref_type: :export}
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap],
            path: "lib/clean_mixer/code_map.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.FileDependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :export
              }
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.ManifestCartographer],
            path: "lib/clean_mixer/compiler_manifests/manifest_cartographer.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeCartographer,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Mix.Compilers.Elixir,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.XrefSource,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.MixProject,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.Manifest,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.App,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeCartographer,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.App,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Logger, ref_type: :export}
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.SourceFile],
            path: "lib/clean_mixer/code_map/source_file.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Path, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.Manifest],
            path: "lib/clean_mixer/compiler_manifests/manifest.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Mix.Compilers.Elixir,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Record, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.ModuleReference,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.CodeModule,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.ModuleReference,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Mix.Compilers.Elixir,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: :lists, ref_type: :unknown}
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.CodeModule],
            path: "lib/clean_mixer/code_map/code_module.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Code, ref_type: :runtime}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime, :export],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.Manifest],
            path: "lib/clean_mixer/compiler_manifests/manifest.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Mix.Compilers.Elixir,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Record, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.ModuleReference,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.CodeModule,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.ModuleReference,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Mix.Compilers.Elixir,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: :lists, ref_type: :unknown}
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.ModuleReference],
            path: "lib/clean_mixer/code_map/module_reference.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime, :export],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.Manifest],
            path: "lib/clean_mixer/compiler_manifests/manifest.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Mix.Compilers.Elixir,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Record, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.ModuleReference,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.CodeModule,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.ModuleReference,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Mix.Compilers.Elixir,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: :lists, ref_type: :unknown}
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.SourceFile],
            path: "lib/clean_mixer/code_map/source_file.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Path, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
            ]
          }
        }
      ],
      source: %CleanMixer.ArchMap.Component{
        file_dependencies: [
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CompilerManifests.XrefSource],
              path: "lib/clean_mixer/compiler_manifests/xref_source.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :xref, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: List.Chars, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: File, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Code, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.SourceFile,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.ModuleReference,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeMap.ModuleReference],
              path: "lib/clean_mixer/code_map/module_reference.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CompilerManifests.XrefSource],
              path: "lib/clean_mixer/compiler_manifests/xref_source.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :xref, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: List.Chars, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: File, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Code, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.SourceFile,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.ModuleReference,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeMap.SourceFile],
              path: "lib/clean_mixer/code_map/source_file.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Path, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CompilerManifests.MixProject],
              path: "lib/clean_mixer/compiler_manifests/mix_project.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Mix.Project, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Mix.Dep, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.App,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CompilerManifests.App],
              path: "lib/clean_mixer/compiler_manifests/app.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Path, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Mix.SCM.Path, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Mix.Project, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Mix.Dep, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Mix, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: File, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: :lists, ref_type: :unknown}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:compile, :export],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CompilerManifests.ManifestCartographer],
              path: "lib/clean_mixer/compiler_manifests/manifest_cartographer.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeCartographer,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Mix.Compilers.Elixir,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.XrefSource,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.MixProject,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.Manifest,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.App,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.SourceFile,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeCartographer,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.App,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Logger, ref_type: :export}
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeCartographer],
              path: "lib/clean_mixer/code_cartographer.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CompilerManifests.ManifestCartographer],
              path: "lib/clean_mixer/compiler_manifests/manifest_cartographer.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeCartographer,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Mix.Compilers.Elixir,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.XrefSource,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.MixProject,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.Manifest,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.App,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.SourceFile,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeCartographer,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.App,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Logger, ref_type: :export}
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeMap],
              path: "lib/clean_mixer/code_map.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.SourceFile,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.FileDependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.SourceFile,
                  ref_type: :export
                }
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CompilerManifests.ManifestCartographer],
              path: "lib/clean_mixer/compiler_manifests/manifest_cartographer.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeCartographer,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Mix.Compilers.Elixir,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.XrefSource,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.MixProject,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.Manifest,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.App,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.SourceFile,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeCartographer,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.App,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Logger, ref_type: :export}
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeMap.SourceFile],
              path: "lib/clean_mixer/code_map/source_file.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Path, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime, :export],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CompilerManifests.ManifestCartographer],
              path: "lib/clean_mixer/compiler_manifests/manifest_cartographer.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeCartographer,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Mix.Compilers.Elixir,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.XrefSource,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.MixProject,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.Manifest,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.App,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.SourceFile,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeCartographer,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.App,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Logger, ref_type: :export}
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CompilerManifests.App],
              path: "lib/clean_mixer/compiler_manifests/app.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Path, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Mix.SCM.Path, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Mix.Project, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Mix.Dep, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Mix, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: File, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: :lists, ref_type: :unknown}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CompilerManifests.ManifestCartographer],
              path: "lib/clean_mixer/compiler_manifests/manifest_cartographer.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeCartographer,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Mix.Compilers.Elixir,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.XrefSource,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.MixProject,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.Manifest,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.App,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.SourceFile,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeCartographer,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.App,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Logger, ref_type: :export}
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CompilerManifests.Manifest],
              path: "lib/clean_mixer/compiler_manifests/manifest.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Mix.Compilers.Elixir,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Record, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.SourceFile,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.ModuleReference,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.CodeModule,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.ModuleReference,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.SourceFile,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Mix.Compilers.Elixir,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: :lists, ref_type: :unknown}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CompilerManifests.ManifestCartographer],
              path: "lib/clean_mixer/compiler_manifests/manifest_cartographer.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeCartographer,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Mix.Compilers.Elixir,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.XrefSource,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.MixProject,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.Manifest,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.App,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.SourceFile,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeCartographer,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.App,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Logger, ref_type: :export}
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CompilerManifests.MixProject],
              path: "lib/clean_mixer/compiler_manifests/mix_project.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Mix.Project, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Mix.Dep, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.App,
                  ref_type: :runtime
                }
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CompilerManifests.ManifestCartographer],
              path: "lib/clean_mixer/compiler_manifests/manifest_cartographer.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeCartographer,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Mix.Compilers.Elixir,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.XrefSource,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.MixProject,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.Manifest,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.App,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.SourceFile,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeCartographer,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CompilerManifests.App,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Logger, ref_type: :export}
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CompilerManifests.XrefSource],
              path: "lib/clean_mixer/compiler_manifests/xref_source.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :xref, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: List.Chars, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: File, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Code, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.SourceFile,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.ModuleReference,
                  ref_type: :runtime
                }
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CompilerManifests.Manifest],
              path: "lib/clean_mixer/compiler_manifests/manifest.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Mix.Compilers.Elixir,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Record, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.SourceFile,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.ModuleReference,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.CodeModule,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.ModuleReference,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.SourceFile,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Mix.Compilers.Elixir,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: :lists, ref_type: :unknown}
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeMap.CodeModule],
              path: "lib/clean_mixer/code_map/code_module.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Code, ref_type: :runtime}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime, :export],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CompilerManifests.Manifest],
              path: "lib/clean_mixer/compiler_manifests/manifest.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Mix.Compilers.Elixir,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Record, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.SourceFile,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.ModuleReference,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.CodeModule,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.ModuleReference,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.SourceFile,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Mix.Compilers.Elixir,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: :lists, ref_type: :unknown}
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeMap.ModuleReference],
              path: "lib/clean_mixer/code_map/module_reference.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime, :export],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CompilerManifests.Manifest],
              path: "lib/clean_mixer/compiler_manifests/manifest.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Mix.Compilers.Elixir,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Record, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.SourceFile,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.ModuleReference,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.CodeModule,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.ModuleReference,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.SourceFile,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Mix.Compilers.Elixir,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: :lists, ref_type: :unknown}
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeMap.SourceFile],
              path: "lib/clean_mixer/code_map/source_file.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Path, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
              ]
            }
          }
        ],
        files: [
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.XrefSource],
            path: "lib/clean_mixer/compiler_manifests/xref_source.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :xref, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: List.Chars, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: File, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Code, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.ModuleReference,
                ref_type: :runtime
              }
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.MixProject],
            path: "lib/clean_mixer/compiler_manifests/mix_project.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Mix.Project, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Mix.Dep, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.App,
                ref_type: :runtime
              }
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.ManifestCartographer],
            path: "lib/clean_mixer/compiler_manifests/manifest_cartographer.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeCartographer,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Mix.Compilers.Elixir,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.XrefSource,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.MixProject,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.Manifest,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.App,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeCartographer,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CompilerManifests.App,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Logger, ref_type: :export}
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.Manifest],
            path: "lib/clean_mixer/compiler_manifests/manifest.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Mix.Compilers.Elixir,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Record, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.ModuleReference,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.CodeModule,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.ModuleReference,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Mix.Compilers.Elixir,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: :lists, ref_type: :unknown}
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CompilerManifests.App],
            path: "lib/clean_mixer/compiler_manifests/app.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Path, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Mix.SCM.Path, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Mix.Project, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Mix.Dep, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Mix, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: File, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Access, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: :lists, ref_type: :unknown}
            ]
          }
        ],
        meta: %{config_path: "lib/clean_mixer/compiler_manifests", tags: []},
        name: "compiler_manifests"
      },
      target: %CleanMixer.ArchMap.Component{
        file_dependencies: [
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeMap],
              path: "lib/clean_mixer/code_map.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.SourceFile,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.FileDependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.SourceFile,
                  ref_type: :export
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeMap.FileDependency],
              path: "lib/clean_mixer/code_map/file_dependency.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: MapSet, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.CodeModule,
                  ref_type: :runtime
                }
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime, :export],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeMap],
              path: "lib/clean_mixer/code_map.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.SourceFile,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.FileDependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.SourceFile,
                  ref_type: :export
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeMap.SourceFile],
              path: "lib/clean_mixer/code_map/source_file.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Path, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeMap.FileDependency],
              path: "lib/clean_mixer/code_map/file_dependency.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: MapSet, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.CodeModule,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeMap.CodeModule],
              path: "lib/clean_mixer/code_map/code_module.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Code, ref_type: :runtime}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeMap.Behaviour],
              path: "lib/clean_mixer/code_map/behaviour.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.CodeModule,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeMap.CodeModule],
              path: "lib/clean_mixer/code_map/code_module.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Code, ref_type: :runtime}
              ]
            }
          }
        ],
        files: [
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap],
            path: "lib/clean_mixer/code_map.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.FileDependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :export
              }
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.CodeModule],
            path: "lib/clean_mixer/code_map/code_module.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Code, ref_type: :runtime}
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.ModuleReference],
            path: "lib/clean_mixer/code_map/module_reference.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.FileDependency],
            path: "lib/clean_mixer/code_map/file_dependency.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: MapSet, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.CodeModule,
                ref_type: :runtime
              }
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.Behaviour],
            path: "lib/clean_mixer/code_map/behaviour.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.CodeModule,
                ref_type: :runtime
              }
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.SourceFile],
            path: "lib/clean_mixer/code_map/source_file.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Path, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
            ]
          }
        ],
        meta: %{config_path: "lib/clean_mixer/code_map", tags: [group: "core_domain"]},
        name: "code_map"
      }
    },
    %CleanMixer.ArchMap.Dependency{
      files: [
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.Abstractness],
            path: "lib/clean_mixer/metrics/component_metrics/abstractness.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.CodeModule,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.CodeModule],
            path: "lib/clean_mixer/code_map/code_module.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Code, ref_type: :runtime}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.AbstractIn],
            path: "lib/clean_mixer/metrics/component_metrics/abstract_in.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.FileDependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.FileDependency],
            path: "lib/clean_mixer/code_map/file_dependency.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: MapSet, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.CodeModule,
                ref_type: :runtime
              }
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.AbstractOut],
            path: "lib/clean_mixer/metrics/component_metrics/abstract_out.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.FileDependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.FileDependency],
            path: "lib/clean_mixer/code_map/file_dependency.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: MapSet, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.CodeModule,
                ref_type: :runtime
              }
            ]
          }
        }
      ],
      source: %CleanMixer.ArchMap.Component{
        file_dependencies: [
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.MetricsMap],
              path: "lib/clean_mixer/metrics/metrics_map.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :math, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.DependencyMetrics,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics],
              path: "lib/clean_mixer/metrics/component_metrics.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                  ref_type: :runtime
                }
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.MetricsMap],
              path: "lib/clean_mixer/metrics/metrics_map.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :math, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.DependencyMetrics,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.DependencyMetrics],
              path: "lib/clean_mixer/metrics/dependency_metrics.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.DependencyMetrics.Usage,
                  ref_type: :runtime
                }
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.FanIn],
              path: "lib/clean_mixer/metrics/component_metrics/fan_in.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.ArchMap, Inspect.CleanMixer.ArchMap],
              path: "lib/clean_mixer/arch_map.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.LexicalTracker,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Any, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Dependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :export},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :export}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.DependencyMetrics],
              path: "lib/clean_mixer/metrics/dependency_metrics.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.DependencyMetrics.Usage,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.DependencyMetrics.Usage],
              path: "lib/clean_mixer/metrics/dependency_metrics/usage.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.MetricsMap,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                  ref_type: :runtime
                }
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.FanOut],
              path: "lib/clean_mixer/metrics/component_metrics/fan_out.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.ArchMap, Inspect.CleanMixer.ArchMap],
              path: "lib/clean_mixer/arch_map.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.LexicalTracker,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Any, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Dependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :export},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :export}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.Abstractness],
              path: "lib/clean_mixer/metrics/component_metrics/abstractness.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.CodeModule,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.ArchMap.Component],
              path: "lib/clean_mixer/arch_map/component.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.Abstractness],
              path: "lib/clean_mixer/metrics/component_metrics/abstractness.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.CodeModule,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeMap.CodeModule],
              path: "lib/clean_mixer/code_map/code_module.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Code, ref_type: :runtime}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.PublicFiles],
              path: "lib/clean_mixer/metrics/component_metrics/public_files.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.ArchMap, Inspect.CleanMixer.ArchMap],
              path: "lib/clean_mixer/arch_map.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.LexicalTracker,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Any, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Dependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :export},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :export}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.AbstractIn],
              path: "lib/clean_mixer/metrics/component_metrics/abstract_in.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.FileDependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.ArchMap, Inspect.CleanMixer.ArchMap],
              path: "lib/clean_mixer/arch_map.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.LexicalTracker,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Any, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Dependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :export},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :export}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.AbstractIn],
              path: "lib/clean_mixer/metrics/component_metrics/abstract_in.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.FileDependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeMap.FileDependency],
              path: "lib/clean_mixer/code_map/file_dependency.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: MapSet, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.CodeModule,
                  ref_type: :runtime
                }
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics],
              path: "lib/clean_mixer/metrics/component_metrics.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.AbstractIn],
              path: "lib/clean_mixer/metrics/component_metrics/abstract_in.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.FileDependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                }
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics],
              path: "lib/clean_mixer/metrics/component_metrics.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.AbstractOut],
              path: "lib/clean_mixer/metrics/component_metrics/abstract_out.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.FileDependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                }
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics],
              path: "lib/clean_mixer/metrics/component_metrics.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.Abstractness],
              path: "lib/clean_mixer/metrics/component_metrics/abstractness.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.CodeModule,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :runtime
                }
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics],
              path: "lib/clean_mixer/metrics/component_metrics.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.Distance],
              path: "lib/clean_mixer/metrics/component_metrics/distance.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics],
              path: "lib/clean_mixer/metrics/component_metrics.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.FanIn],
              path: "lib/clean_mixer/metrics/component_metrics/fan_in.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                }
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics],
              path: "lib/clean_mixer/metrics/component_metrics.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.FanOut],
              path: "lib/clean_mixer/metrics/component_metrics/fan_out.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                }
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics],
              path: "lib/clean_mixer/metrics/component_metrics.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.Instability],
              path: "lib/clean_mixer/metrics/component_metrics/instability.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics],
              path: "lib/clean_mixer/metrics/component_metrics.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.PublicFiles],
              path: "lib/clean_mixer/metrics/component_metrics/public_files.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                }
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics],
              path: "lib/clean_mixer/metrics/component_metrics.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.Stability],
              path: "lib/clean_mixer/metrics/component_metrics/stability.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.AbstractOut],
              path: "lib/clean_mixer/metrics/component_metrics/abstract_out.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.FileDependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.ArchMap, Inspect.CleanMixer.ArchMap],
              path: "lib/clean_mixer/arch_map.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.LexicalTracker,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Any, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Dependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :export},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :export}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.AbstractOut],
              path: "lib/clean_mixer/metrics/component_metrics/abstract_out.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.FileDependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeMap.FileDependency],
              path: "lib/clean_mixer/code_map/file_dependency.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: MapSet, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.CodeModule,
                  ref_type: :runtime
                }
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.DependencyMetrics.Usage],
              path: "lib/clean_mixer/metrics/dependency_metrics/usage.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.MetricsMap,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.PublicFiles],
              path: "lib/clean_mixer/metrics/component_metrics/public_files.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                }
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.DependencyMetrics.Usage],
              path: "lib/clean_mixer/metrics/dependency_metrics/usage.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.MetricsMap,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.MetricsMap],
              path: "lib/clean_mixer/metrics/metrics_map.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :math, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.DependencyMetrics,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics,
                  ref_type: :runtime
                }
              ]
            }
          }
        ],
        files: [
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.MetricsMap],
            path: "lib/clean_mixer/metrics/metrics_map.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :math, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.DependencyMetrics,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics,
                ref_type: :runtime
              }
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.FanIn],
            path: "lib/clean_mixer/metrics/component_metrics/fan_in.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.DependencyMetrics],
            path: "lib/clean_mixer/metrics/dependency_metrics.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.DependencyMetrics.Usage,
                ref_type: :runtime
              }
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.Stability],
            path: "lib/clean_mixer/metrics/component_metrics/stability.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime}
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.FanOut],
            path: "lib/clean_mixer/metrics/component_metrics/fan_out.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.Abstractness],
            path: "lib/clean_mixer/metrics/component_metrics/abstractness.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.CodeModule,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :runtime
              }
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.PublicFiles],
            path: "lib/clean_mixer/metrics/component_metrics/public_files.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.Instability],
            path: "lib/clean_mixer/metrics/component_metrics/instability.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime}
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.Distance],
            path: "lib/clean_mixer/metrics/component_metrics/distance.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime}
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.AbstractIn],
            path: "lib/clean_mixer/metrics/component_metrics/abstract_in.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.FileDependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics],
            path: "lib/clean_mixer/metrics/component_metrics.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                ref_type: :runtime
              }
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.AbstractOut],
            path: "lib/clean_mixer/metrics/component_metrics/abstract_out.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.FileDependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.DependencyMetrics.Usage],
            path: "lib/clean_mixer/metrics/dependency_metrics/usage.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.MetricsMap,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                ref_type: :runtime
              }
            ]
          }
        ],
        meta: %{config_path: "lib/clean_mixer/metrics", tags: []},
        name: "metrics"
      },
      target: %CleanMixer.ArchMap.Component{
        file_dependencies: [
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeMap],
              path: "lib/clean_mixer/code_map.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.SourceFile,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.FileDependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.SourceFile,
                  ref_type: :export
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeMap.FileDependency],
              path: "lib/clean_mixer/code_map/file_dependency.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: MapSet, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.CodeModule,
                  ref_type: :runtime
                }
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime, :export],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeMap],
              path: "lib/clean_mixer/code_map.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.SourceFile,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.FileDependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.SourceFile,
                  ref_type: :export
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeMap.SourceFile],
              path: "lib/clean_mixer/code_map/source_file.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Path, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeMap.FileDependency],
              path: "lib/clean_mixer/code_map/file_dependency.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: MapSet, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.CodeModule,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeMap.CodeModule],
              path: "lib/clean_mixer/code_map/code_module.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Code, ref_type: :runtime}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeMap.Behaviour],
              path: "lib/clean_mixer/code_map/behaviour.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.CodeModule,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeMap.CodeModule],
              path: "lib/clean_mixer/code_map/code_module.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Code, ref_type: :runtime}
              ]
            }
          }
        ],
        files: [
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap],
            path: "lib/clean_mixer/code_map.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.FileDependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.SourceFile,
                ref_type: :export
              }
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.CodeModule],
            path: "lib/clean_mixer/code_map/code_module.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Code, ref_type: :runtime}
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.ModuleReference],
            path: "lib/clean_mixer/code_map/module_reference.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.FileDependency],
            path: "lib/clean_mixer/code_map/file_dependency.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: MapSet, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.CodeModule,
                ref_type: :runtime
              }
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.Behaviour],
            path: "lib/clean_mixer/code_map/behaviour.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.CodeModule,
                ref_type: :runtime
              }
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.CodeMap.SourceFile],
            path: "lib/clean_mixer/code_map/source_file.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Path, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
            ]
          }
        ],
        meta: %{config_path: "lib/clean_mixer/code_map", tags: [group: "core_domain"]},
        name: "code_map"
      }
    },
    %CleanMixer.ArchMap.Dependency{
      files: [
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.FanIn],
            path: "lib/clean_mixer/metrics/component_metrics/fan_in.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.ArchMap, Inspect.CleanMixer.ArchMap],
            path: "lib/clean_mixer/arch_map.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.LexicalTracker,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Any, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Dependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :export},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :export}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.FanOut],
            path: "lib/clean_mixer/metrics/component_metrics/fan_out.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.ArchMap, Inspect.CleanMixer.ArchMap],
            path: "lib/clean_mixer/arch_map.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.LexicalTracker,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Any, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Dependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :export},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :export}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.Abstractness],
            path: "lib/clean_mixer/metrics/component_metrics/abstractness.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.CodeModule,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.ArchMap.Component],
            path: "lib/clean_mixer/arch_map/component.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.PublicFiles],
            path: "lib/clean_mixer/metrics/component_metrics/public_files.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.ArchMap, Inspect.CleanMixer.ArchMap],
            path: "lib/clean_mixer/arch_map.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.LexicalTracker,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Any, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Dependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :export},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :export}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.AbstractIn],
            path: "lib/clean_mixer/metrics/component_metrics/abstract_in.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.FileDependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.ArchMap, Inspect.CleanMixer.ArchMap],
            path: "lib/clean_mixer/arch_map.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.LexicalTracker,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Any, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Dependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :export},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :export}
            ]
          }
        },
        %CleanMixer.CodeMap.FileDependency{
          ref_types: [:runtime],
          source: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.AbstractOut],
            path: "lib/clean_mixer/metrics/component_metrics/abstract_out.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.FileDependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          },
          target: %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.ArchMap, Inspect.CleanMixer.ArchMap],
            path: "lib/clean_mixer/arch_map.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.LexicalTracker,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Any, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Dependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :export},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :export}
            ]
          }
        }
      ],
      source: %CleanMixer.ArchMap.Component{
        file_dependencies: [
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.MetricsMap],
              path: "lib/clean_mixer/metrics/metrics_map.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :math, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.DependencyMetrics,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics],
              path: "lib/clean_mixer/metrics/component_metrics.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                  ref_type: :runtime
                }
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.MetricsMap],
              path: "lib/clean_mixer/metrics/metrics_map.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :math, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.DependencyMetrics,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.DependencyMetrics],
              path: "lib/clean_mixer/metrics/dependency_metrics.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.DependencyMetrics.Usage,
                  ref_type: :runtime
                }
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.FanIn],
              path: "lib/clean_mixer/metrics/component_metrics/fan_in.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.ArchMap, Inspect.CleanMixer.ArchMap],
              path: "lib/clean_mixer/arch_map.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.LexicalTracker,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Any, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Dependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :export},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :export}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.DependencyMetrics],
              path: "lib/clean_mixer/metrics/dependency_metrics.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.DependencyMetrics.Usage,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.DependencyMetrics.Usage],
              path: "lib/clean_mixer/metrics/dependency_metrics/usage.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.MetricsMap,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                  ref_type: :runtime
                }
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.FanOut],
              path: "lib/clean_mixer/metrics/component_metrics/fan_out.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.ArchMap, Inspect.CleanMixer.ArchMap],
              path: "lib/clean_mixer/arch_map.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.LexicalTracker,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Any, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Dependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :export},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :export}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.Abstractness],
              path: "lib/clean_mixer/metrics/component_metrics/abstractness.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.CodeModule,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.ArchMap.Component],
              path: "lib/clean_mixer/arch_map/component.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.Abstractness],
              path: "lib/clean_mixer/metrics/component_metrics/abstractness.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.CodeModule,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeMap.CodeModule],
              path: "lib/clean_mixer/code_map/code_module.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Keyword, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Code, ref_type: :runtime}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.PublicFiles],
              path: "lib/clean_mixer/metrics/component_metrics/public_files.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.ArchMap, Inspect.CleanMixer.ArchMap],
              path: "lib/clean_mixer/arch_map.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.LexicalTracker,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Any, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Dependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :export},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :export}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.AbstractIn],
              path: "lib/clean_mixer/metrics/component_metrics/abstract_in.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.FileDependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.ArchMap, Inspect.CleanMixer.ArchMap],
              path: "lib/clean_mixer/arch_map.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.LexicalTracker,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Any, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Dependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :export},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :export}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.AbstractIn],
              path: "lib/clean_mixer/metrics/component_metrics/abstract_in.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.FileDependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeMap.FileDependency],
              path: "lib/clean_mixer/code_map/file_dependency.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: MapSet, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.CodeModule,
                  ref_type: :runtime
                }
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics],
              path: "lib/clean_mixer/metrics/component_metrics.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.AbstractIn],
              path: "lib/clean_mixer/metrics/component_metrics/abstract_in.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.FileDependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                }
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics],
              path: "lib/clean_mixer/metrics/component_metrics.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.AbstractOut],
              path: "lib/clean_mixer/metrics/component_metrics/abstract_out.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.FileDependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                }
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics],
              path: "lib/clean_mixer/metrics/component_metrics.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.Abstractness],
              path: "lib/clean_mixer/metrics/component_metrics/abstractness.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.CodeModule,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :runtime
                }
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics],
              path: "lib/clean_mixer/metrics/component_metrics.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.Distance],
              path: "lib/clean_mixer/metrics/component_metrics/distance.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics],
              path: "lib/clean_mixer/metrics/component_metrics.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.FanIn],
              path: "lib/clean_mixer/metrics/component_metrics/fan_in.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                }
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics],
              path: "lib/clean_mixer/metrics/component_metrics.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.FanOut],
              path: "lib/clean_mixer/metrics/component_metrics/fan_out.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                }
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics],
              path: "lib/clean_mixer/metrics/component_metrics.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.Instability],
              path: "lib/clean_mixer/metrics/component_metrics/instability.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics],
              path: "lib/clean_mixer/metrics/component_metrics.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.PublicFiles],
              path: "lib/clean_mixer/metrics/component_metrics/public_files.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                }
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics],
              path: "lib/clean_mixer/metrics/component_metrics.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.Stability],
              path: "lib/clean_mixer/metrics/component_metrics/stability.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.AbstractOut],
              path: "lib/clean_mixer/metrics/component_metrics/abstract_out.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.FileDependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.ArchMap, Inspect.CleanMixer.ArchMap],
              path: "lib/clean_mixer/arch_map.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.LexicalTracker,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Any, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Dependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :export},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :export}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.AbstractOut],
              path: "lib/clean_mixer/metrics/component_metrics/abstract_out.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.FileDependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.CodeMap.FileDependency],
              path: "lib/clean_mixer/code_map/file_dependency.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: MapSet, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: List, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.CodeMap.CodeModule,
                  ref_type: :runtime
                }
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.DependencyMetrics.Usage],
              path: "lib/clean_mixer/metrics/dependency_metrics/usage.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.MetricsMap,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.ComponentMetrics.PublicFiles],
              path: "lib/clean_mixer/metrics/component_metrics/public_files.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                }
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.DependencyMetrics.Usage],
              path: "lib/clean_mixer/metrics/dependency_metrics/usage.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.MetricsMap,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                  ref_type: :runtime
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.Metrics.MetricsMap],
              path: "lib/clean_mixer/metrics/metrics_map.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :math, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.DependencyMetrics,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.Metrics.ComponentMetrics,
                  ref_type: :runtime
                }
              ]
            }
          }
        ],
        files: [
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.MetricsMap],
            path: "lib/clean_mixer/metrics/metrics_map.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :math, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: :maps, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.DependencyMetrics,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics,
                ref_type: :runtime
              }
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.FanIn],
            path: "lib/clean_mixer/metrics/component_metrics/fan_in.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.DependencyMetrics],
            path: "lib/clean_mixer/metrics/dependency_metrics.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.DependencyMetrics.Usage,
                ref_type: :runtime
              }
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.Stability],
            path: "lib/clean_mixer/metrics/component_metrics/stability.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime}
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.FanOut],
            path: "lib/clean_mixer/metrics/component_metrics/fan_out.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.Abstractness],
            path: "lib/clean_mixer/metrics/component_metrics/abstractness.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.CodeModule,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :runtime
              }
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.PublicFiles],
            path: "lib/clean_mixer/metrics/component_metrics/public_files.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.Instability],
            path: "lib/clean_mixer/metrics/component_metrics/instability.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime}
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.Distance],
            path: "lib/clean_mixer/metrics/component_metrics/distance.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime}
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.AbstractIn],
            path: "lib/clean_mixer/metrics/component_metrics/abstract_in.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.FileDependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics],
            path: "lib/clean_mixer/metrics/component_metrics.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Stability,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Instability,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.FanOut,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.FanIn,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Distance,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.Abstractness,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.AbstractOut,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.AbstractIn,
                ref_type: :runtime
              }
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.ComponentMetrics.AbstractOut],
            path: "lib/clean_mixer/metrics/component_metrics/abstract_out.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.CodeMap.FileDependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              }
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.Metrics.DependencyMetrics.Usage],
            path: "lib/clean_mixer/metrics/dependency_metrics/usage.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.MetricsMap,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.Metrics.ComponentMetrics.PublicFiles,
                ref_type: :runtime
              }
            ]
          }
        ],
        meta: %{config_path: "lib/clean_mixer/metrics", tags: []},
        name: "metrics"
      },
      target: %CleanMixer.ArchMap.Component{
        file_dependencies: [
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime, :export],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.ArchMap, Inspect.CleanMixer.ArchMap],
              path: "lib/clean_mixer/arch_map.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.LexicalTracker,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Any, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Dependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :export},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :export}
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.ArchMap.Component],
              path: "lib/clean_mixer/arch_map/component.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.ArchMap, Inspect.CleanMixer.ArchMap],
              path: "lib/clean_mixer/arch_map.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.LexicalTracker,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Any, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Dependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :export},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :export}
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.ArchMap.Dependency],
              path: "lib/clean_mixer/arch_map/dependency.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.ArchMap.Filter],
              path: "lib/clean_mixer/arch_map/filter.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Filter.Pattern,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Dependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Dependency,
                  ref_type: :export
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.ArchMap, Inspect.CleanMixer.ArchMap],
              path: "lib/clean_mixer/arch_map.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.LexicalTracker,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Any, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Dependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :export},
                %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :export}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime, :export],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.ArchMap.Filter],
              path: "lib/clean_mixer/arch_map/filter.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Filter.Pattern,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Dependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Dependency,
                  ref_type: :export
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.ArchMap.Component],
              path: "lib/clean_mixer/arch_map/component.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime, :export],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.ArchMap.Filter],
              path: "lib/clean_mixer/arch_map/filter.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Filter.Pattern,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Dependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Dependency,
                  ref_type: :export
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.ArchMap.Dependency],
              path: "lib/clean_mixer/arch_map/dependency.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
              ]
            }
          },
          %CleanMixer.CodeMap.FileDependency{
            ref_types: [:runtime],
            source: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.ArchMap.Filter],
              path: "lib/clean_mixer/arch_map/filter.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Filter.Pattern,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Dependency,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap,
                  ref_type: :runtime
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Component,
                  ref_type: :export
                },
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: CleanMixer.ArchMap.Dependency,
                  ref_type: :export
                }
              ]
            },
            target: %CleanMixer.CodeMap.SourceFile{
              modules: [CleanMixer.ArchMap.Filter.Pattern],
              path: "lib/clean_mixer/arch_map/filter/pattern.ex",
              references: [
                %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: Kernel.Typespec,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
                %CleanMixer.CodeMap.ModuleReference{
                  module_name: ArgumentError,
                  ref_type: :compile
                },
                %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Regex, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
                %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
              ]
            }
          }
        ],
        files: [
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.ArchMap.Filter.Pattern],
            path: "lib/clean_mixer/arch_map/filter/pattern.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Regex, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.ArchMap, Inspect.CleanMixer.ArchMap],
            path: "lib/clean_mixer/arch_map.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.LexicalTracker,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :digraph, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Any, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Dependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect, ref_type: :export},
              %CleanMixer.CodeMap.ModuleReference{module_name: Inspect.Opts, ref_type: :export}
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.ArchMap.Component],
            path: "lib/clean_mixer/arch_map/component.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.ArchMap.Dependency],
            path: "lib/clean_mixer/arch_map/dependency.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: String.Chars, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Protocol, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Module, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel.Utils, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: ArgumentError, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: Map, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime}
            ]
          },
          %CleanMixer.CodeMap.SourceFile{
            modules: [CleanMixer.ArchMap.Filter],
            path: "lib/clean_mixer/arch_map/filter.ex",
            references: [
              %CleanMixer.CodeMap.ModuleReference{
                module_name: Kernel.Typespec,
                ref_type: :compile
              },
              %CleanMixer.CodeMap.ModuleReference{module_name: Kernel, ref_type: :compile},
              %CleanMixer.CodeMap.ModuleReference{module_name: :erlang, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{module_name: Enum, ref_type: :runtime},
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Filter.Pattern,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Dependency,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap,
                ref_type: :runtime
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Component,
                ref_type: :export
              },
              %CleanMixer.CodeMap.ModuleReference{
                module_name: CleanMixer.ArchMap.Dependency,
                ref_type: :export
              }
            ]
          }
        ],
        meta: %{config_path: "lib/clean_mixer/arch_map", tags: [group: "core_domain"]},
        name: "arch_map"
      }
    }
  ]
}